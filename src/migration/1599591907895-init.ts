import {MigrationInterface, QueryRunner} from "typeorm";

export class init1599591907895 implements MigrationInterface {
    name = 'init1599591907895'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query("CREATE TABLE `coupon_companies` (`createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `couponId` int NOT NULL, `companyId` int NOT NULL, INDEX `companyId` (`companyId`), PRIMARY KEY (`couponId`, `companyId`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `roles` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `displayName` varchar(255) NULL, `permissions` text NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `company_users` (`id` int UNSIGNED NOT NULL AUTO_INCREMENT, `active` tinyint NULL DEFAULT 1, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyId` int NULL, `userId` int NULL, `roleId` int NULL, INDEX `roleId` (`roleId`), INDEX `userId` (`userId`), UNIQUE INDEX `company_users_userId_companyId_unique` (`companyId`, `userId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `credit_balances` (`id` int NOT NULL AUTO_INCREMENT, `value` float(12) NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `userId` int NULL, INDEX `userId` (`userId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `deliveries` (`id` int NOT NULL AUTO_INCREMENT, `description` varchar(255) NULL, `size` enum ('small', 'medium', 'large') NULL DEFAULT 'medium', `status` enum ('waiting', 'waitingDelivery', 'delivering', 'delivered', 'canceled') NULL DEFAULT 'waitingDelivery', `value` decimal(2,0) NULL, `receiverName` varchar(255) NULL, `receiverContact` varchar(255) NULL, `senderContact` varchar(255) NULL, `nameAddressFrom` varchar(255) NULL, `streetAddressFrom` varchar(255) NULL, `numberAddressFrom` int NULL, `complementAddressFrom` varchar(255) NULL, `districtAddressFrom` varchar(255) NULL, `zipcodeAddressFrom` int NULL, `cityAddressFrom` varchar(255) NULL, `stateAddressFrom` varchar(255) NULL, `referenceAddressFrom` varchar(255) NULL, `locationAddressFrom` point NULL, `nameAddressTo` varchar(255) NULL, `streetAddressTo` varchar(255) NULL, `numberAddressTo` int NULL, `complementAddressTo` varchar(255) NULL, `districtAddressTo` varchar(255) NULL, `zipcodeAddressTo` int NULL, `cityAddressTo` varchar(255) NULL, `stateAddressTo` varchar(255) NULL, `referenceAddressTo` varchar(255) NULL, `locationAddressTo` point NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `orderId` int NULL, `deliveryManId` int NULL, INDEX `deliveryManId` (`deliveryManId`), INDEX `orderId` (`orderId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `order_options` (`id` int UNSIGNED NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `description` varchar(255) NULL, `price` decimal(10,2) NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `orderOptionsGroupId` int NULL, `optionRelatedId` int NULL, INDEX `optionRelatedId` (`optionRelatedId`), INDEX `orderOptionsGroupId` (`orderOptionsGroupId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `options` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `description` varchar(255) NULL, `order` int NOT NULL DEFAULT 0, `maxSelectRestrainOther` int NULL, `active` tinyint NULL DEFAULT 1, `removed` tinyint NOT NULL DEFAULT 0, `price` decimal(10,2) NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `optionsGroupId` int NULL, INDEX `optionsGroupId` (`optionsGroupId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `options_groups` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `type` enum ('single', 'multi') NOT NULL DEFAULT 'single', `priceType` enum ('higher', 'sum') NOT NULL DEFAULT 'higher', `order` int NOT NULL DEFAULT 0, `minSelect` int NULL, `maxSelect` int NULL, `active` tinyint NULL DEFAULT 1, `removed` tinyint NOT NULL DEFAULT 0, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `productId` int NULL, `maxSelectRestrain` int NULL, INDEX `maxSelectRestrain` (`maxSelectRestrain`), INDEX `productId` (`productId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `order_option_groups` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `priceType` enum ('higher', 'sum') NOT NULL DEFAULT 'higher', `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `orderProductId` int UNSIGNED NULL, `optionsGroupRelatedId` int NULL, INDEX `optionsGroupRelatedId` (`optionsGroupRelatedId`), INDEX `orderProductId` (`orderProductId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `order_products` (`id` int UNSIGNED NOT NULL AUTO_INCREMENT, `quantity` int NULL, `name` varchar(255) NULL, `price` decimal(10,2) NULL, `message` varchar(255) NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `productId` int NULL, `orderId` int NULL, `productRelatedId` int NULL, INDEX `productRelatedId` (`productRelatedId`), INDEX `orderId` (`orderId`), INDEX `productId` (`productId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `company_payment_methods` (`id` int UNSIGNED NOT NULL AUTO_INCREMENT, `settings` text NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyId` int NULL, `paymentMethodId` int NULL, INDEX `paymentMethodId` (`paymentMethodId`), UNIQUE INDEX `company_payment_methods_paymentMethodId_companyId_unique` (`companyId`, `paymentMethodId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `payment_methods` (`id` int NOT NULL AUTO_INCREMENT, `type` enum ('money', 'delivery', 'app') NOT NULL DEFAULT 'delivery', `displayName` varchar(255) NULL, `image` text NULL, `order` int NOT NULL DEFAULT 0, `fee` decimal(10,2) NOT NULL DEFAULT 0, `feeType` enum ('value', 'pct') NOT NULL DEFAULT 'pct', `active` tinyint NOT NULL DEFAULT 1, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `ratings` (`id` int NOT NULL AUTO_INCREMENT, `rate` int NULL, `comment` text NULL, `hidden` tinyint NULL DEFAULT 1, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyId` int NULL, `orderId` int NULL, `userId` int NULL, INDEX `userId` (`userId`), INDEX `orderId` (`orderId`), INDEX `companyId` (`companyId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `orders` (`id` int NOT NULL AUTO_INCREMENT, `paymentFee` decimal(10,2) NULL, `deliveryPrice` decimal(10,2) NULL, `deliveryTime` int NOT NULL DEFAULT 0, `type` enum ('takeout', 'delivery', 'peDelivery') NOT NULL DEFAULT 'delivery', `price` decimal(10,2) NULL, `discount` decimal(10,2) NULL, `status` enum ('waiting', 'scheduled', 'preparing', 'waitingPickUp', 'waitingDelivery', 'delivering', 'delivered', 'canceled') NULL DEFAULT 'waiting', `message` text NULL, `nameAddress` varchar(255) NULL, `streetAddress` varchar(255) NULL, `numberAddress` int NULL, `complementAddress` varchar(255) NULL, `referenceAddress` varchar(255) NULL, `districtAddress` varchar(255) NULL, `zipcodeAddress` int NULL, `cityAddress` varchar(255) NULL, `stateAddress` varchar(255) NULL, `locationAddress` point NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `userId` int NULL, `companyId` int NULL, `paymentMethodId` int NULL, `creditHistoryId` int NULL, `couponId` int NULL, `scheduledTo` datetime NULL, INDEX `orders_couponId_foreign_idx` (`couponId`), INDEX `creditHistoryId` (`creditHistoryId`), INDEX `paymentMethodId` (`paymentMethodId`), INDEX `companyId` (`companyId`), INDEX `userId` (`userId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `credit_history` (`id` int NOT NULL AUTO_INCREMENT, `value` float(12) NULL, `history` varchar(255) NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `userId` int NULL, INDEX `userId` (`userId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `favorite_products` (`createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `userId` int NOT NULL DEFAULT 0, `productId` int NOT NULL DEFAULT 0, INDEX `productId` (`productId`), PRIMARY KEY (`userId`, `productId`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `user_addresses` (`createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `userId` int NOT NULL DEFAULT 0, `addressId` int NOT NULL DEFAULT 0, INDEX `addressId` (`addressId`), PRIMARY KEY (`userId`, `addressId`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `user_metas` (`id` int NOT NULL AUTO_INCREMENT, `key` varchar(255) NULL COMMENT 'phone | email | document | address | ...', `value` text NULL, `unique` tinyint NULL DEFAULT 0, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `userId` int NULL, INDEX `userId` (`userId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `users` (`id` int NOT NULL AUTO_INCREMENT, `firstName` varchar(255) NULL, `lastName` varchar(255) NULL, `image` text NULL, `email` varchar(255) NULL, `password` varchar(255) NULL, `salt` varchar(255) NULL, `active` tinyint NULL DEFAULT 1, `role` varchar(255) NOT NULL COMMENT 'master | default' DEFAULT 'default', `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, UNIQUE INDEX `email` (`email`), UNIQUE INDEX `IDX_97672ac88f789774dd47f7c8be` (`email`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `coupon_users` (`createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `couponId` int NOT NULL, `userId` int NOT NULL, INDEX `userId` (`userId`), PRIMARY KEY (`couponId`, `userId`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `coupons` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `image` text NULL, `startsAt` datetime NULL, `expiresAt` datetime NULL, `description` varchar(255) NULL, `masterOnly` tinyint NULL COMMENT 'Se verdadeiro, apenas usuário master consegue alterar' DEFAULT 0, `onlyFirstPurchases` tinyint NULL COMMENT 'Se verdadeiro, apenas válido apenas para primeira compra de cada usuário' DEFAULT 0, `featured` tinyint NULL COMMENT 'Se verdadeiro, usuário pode pegar cupom na home do app' DEFAULT 0, `active` tinyint NULL DEFAULT 1, `taxable` decimal(10,2) NULL COMMENT 'Porcentagem do cupom que será pago pelo estabelecimento' DEFAULT 100, `maxPerUser` int NULL DEFAULT 1, `maxPurchases` int NULL DEFAULT 0, `minValue` decimal(10,2) NULL DEFAULT 0, `maxValue` decimal(10,2) NULL DEFAULT 0, `valueType` enum ('value', 'percentage') NOT NULL DEFAULT 'percentage', `value` decimal(2,0) NULL, `freeDelivery` tinyint NOT NULL DEFAULT 0, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `coupon_products` (`createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `couponId` int NOT NULL, `productId` int NOT NULL, INDEX `productId` (`productId`), PRIMARY KEY (`couponId`, `productId`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `sales` (`id` int NOT NULL AUTO_INCREMENT, `price` decimal(10,2) NOT NULL, `startsAt` datetime NULL, `expiresAt` datetime NULL, `active` tinyint NOT NULL DEFAULT 1, `removed` tinyint NOT NULL DEFAULT 0, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `productId` int NULL, INDEX `productId` (`productId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `products` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `description` varchar(255) NULL, `sku` varchar(100) NULL, `image` text NULL, `active` tinyint NULL DEFAULT 1, `listed` tinyint NULL COMMENT 'Show the product in product list and search' DEFAULT 1, `order` int NOT NULL DEFAULT 0, `type` enum ('inline', 'panel') NOT NULL DEFAULT 'inline', `fromPrice` decimal(10,2) NULL, `price` decimal(10,2) NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `categoryId` int NULL, `companyId` int NULL, `minDeliveryTime` int NULL, `scheduleEnabled` tinyint NULL DEFAULT 0, INDEX `companyId` (`companyId`), INDEX `categoryId` (`categoryId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `categories` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `image` varchar(255) NULL, `description` varchar(255) NULL, `active` tinyint NULL DEFAULT 1, `order` int NOT NULL DEFAULT 0, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyId` int NULL, INDEX `companyId` (`companyId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `company_types` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `image` varchar(255) NULL, `description` varchar(255) NULL, `active` tinyint NULL DEFAULT 1, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `company_metas` (`id` int NOT NULL AUTO_INCREMENT, `key` varchar(255) NULL COMMENT 'phone | email | document | businessHours | address | ...', `value` text NULL, `unique` tinyint NULL DEFAULT 0, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyId` int NULL, `type` varchar(255) NULL, INDEX `companyId` (`companyId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `delivery_areas` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `center` point NULL, `radius` float(12) NULL, `price` float(12) NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyId` int NULL, `active` tinyint NULL DEFAULT 1, INDEX `companyId` (`companyId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `view_areas` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `center` point NOT NULL, `radius` float(12) NOT NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyId` int NULL, `active` tinyint NULL DEFAULT 1, INDEX `companyId` (`companyId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `companies` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `displayName` varchar(255) NULL, `image` text NULL, `backgroundColor` varchar(10) NULL, `acceptTakeout` tinyint NOT NULL DEFAULT 1, `active` tinyint NULL DEFAULT 0, `published` tinyint NOT NULL DEFAULT 0, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `companyTypeId` int NULL, `addressId` int NULL, INDEX `addressId` (`addressId`), INDEX `companyTypeId` (`companyTypeId`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `addresses` (`id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `street` varchar(255) NULL, `number` int NULL, `complement` varchar(255) NULL, `district` varchar(255) NULL, `zipcode` int NULL, `city` varchar(255) NULL, `state` varchar(255) NULL, `location` point NOT NULL, `createdAt` datetime NOT NULL, `updatedAt` datetime NOT NULL, `reference` varchar(255) NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `config` (`id` int NOT NULL AUTO_INCREMENT, `key` varchar(255) NULL, `value` varchar(255) NULL, `type` varchar(255) NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("ALTER TABLE `coupon_companies` ADD CONSTRAINT `FK_4b6a4884f5c7291d652bf955398` FOREIGN KEY (`couponId`) REFERENCES `coupons`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `coupon_companies` ADD CONSTRAINT `FK_896186ddfb5aa38f3606492d3a8` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `company_users` ADD CONSTRAINT `FK_f48efdd06dd9b999ae40c3c96a6` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `company_users` ADD CONSTRAINT `FK_9313a9760bacf83c51e9232c3c3` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `company_users` ADD CONSTRAINT `FK_380c62ffe8112dadf9b5709beee` FOREIGN KEY (`roleId`) REFERENCES `roles`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `credit_balances` ADD CONSTRAINT `FK_7f8103cfe175c66f1e5e8acfe23` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `deliveries` ADD CONSTRAINT `FK_f7433e3639e213f901e22cf8640` FOREIGN KEY (`orderId`) REFERENCES `orders`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `deliveries` ADD CONSTRAINT `FK_c6135e6bed9c4309abfcdaf9569` FOREIGN KEY (`deliveryManId`) REFERENCES `users`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `order_options` ADD CONSTRAINT `FK_f87d8aaf729cd701be0630ab9d7` FOREIGN KEY (`orderOptionsGroupId`) REFERENCES `order_option_groups`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `order_options` ADD CONSTRAINT `FK_ae3e162e5d4a7bbef8270924d66` FOREIGN KEY (`optionRelatedId`) REFERENCES `options`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `options` ADD CONSTRAINT `FK_693536a026dac7ded111a40d52b` FOREIGN KEY (`optionsGroupId`) REFERENCES `options_groups`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `options_groups` ADD CONSTRAINT `FK_bf72d679755159292984b730288` FOREIGN KEY (`productId`) REFERENCES `products`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `options_groups` ADD CONSTRAINT `FK_3aecc6d707a2e8787b82bbc707e` FOREIGN KEY (`maxSelectRestrain`) REFERENCES `options_groups`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `order_option_groups` ADD CONSTRAINT `FK_2d35f9d488137f53f6c0c76a9b1` FOREIGN KEY (`orderProductId`) REFERENCES `order_products`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `order_option_groups` ADD CONSTRAINT `FK_1a6cfcb48db2eefddd246586b55` FOREIGN KEY (`optionsGroupRelatedId`) REFERENCES `options_groups`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `order_products` ADD CONSTRAINT `FK_27ca18f2453639a1cafb7404ece` FOREIGN KEY (`productId`) REFERENCES `products`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `order_products` ADD CONSTRAINT `FK_28b66449cf7cd76444378ad4e92` FOREIGN KEY (`orderId`) REFERENCES `orders`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `order_products` ADD CONSTRAINT `FK_24388ec1004228b4745d21d547b` FOREIGN KEY (`productRelatedId`) REFERENCES `products`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `company_payment_methods` ADD CONSTRAINT `FK_d167c7a5fa7e321ac698cbbc67d` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `company_payment_methods` ADD CONSTRAINT `FK_50140b197f6a47698d463b4b3aa` FOREIGN KEY (`paymentMethodId`) REFERENCES `payment_methods`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `ratings` ADD CONSTRAINT `FK_026a9f41a80ac181cd8ead10b13` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `ratings` ADD CONSTRAINT `FK_38bce3ebd84aa545a418c6b6e9c` FOREIGN KEY (`orderId`) REFERENCES `orders`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `ratings` ADD CONSTRAINT `FK_4d0b0e3a4c4af854d225154ba40` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `orders` ADD CONSTRAINT `FK_151b79a83ba240b0cb31b2302d1` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `orders` ADD CONSTRAINT `FK_b6fe899d5ca4a3f5925463990d1` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `orders` ADD CONSTRAINT `FK_c137e0afcc291b9135d3e0c3d4e` FOREIGN KEY (`paymentMethodId`) REFERENCES `payment_methods`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `orders` ADD CONSTRAINT `FK_cbeaba1d3093f972e9b89fe5042` FOREIGN KEY (`creditHistoryId`) REFERENCES `credit_history`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `orders` ADD CONSTRAINT `FK_c26db6c65929ecfeab91073e80c` FOREIGN KEY (`couponId`) REFERENCES `coupons`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `credit_history` ADD CONSTRAINT `FK_7c689c904a5dadd63126a5c948f` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `favorite_products` ADD CONSTRAINT `FK_393984c0bf9c461d0171360f737` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `favorite_products` ADD CONSTRAINT `FK_aec1e29e9ebed0d27e185c4896e` FOREIGN KEY (`productId`) REFERENCES `products`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `user_addresses` ADD CONSTRAINT `FK_781afdedafe920f331f6229cb62` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `user_addresses` ADD CONSTRAINT `FK_fa6da87159415a34ef76d14f729` FOREIGN KEY (`addressId`) REFERENCES `addresses`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `user_metas` ADD CONSTRAINT `FK_eccc6b4c4b311f38fd4e84d7290` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `coupon_users` ADD CONSTRAINT `FK_f0b0ea9f550e1fd439ca459ecb0` FOREIGN KEY (`couponId`) REFERENCES `coupons`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `coupon_users` ADD CONSTRAINT `FK_a79deee063e7500c19cb23c0e95` FOREIGN KEY (`userId`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `coupon_products` ADD CONSTRAINT `FK_32d7f809acaa65ddcaf7eb22f37` FOREIGN KEY (`couponId`) REFERENCES `coupons`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `coupon_products` ADD CONSTRAINT `FK_d37ece730758316fcc06d20ca3d` FOREIGN KEY (`productId`) REFERENCES `products`(`id`) ON DELETE CASCADE ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `sales` ADD CONSTRAINT `FK_58de77cc0543589490a33558b8e` FOREIGN KEY (`productId`) REFERENCES `products`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `products` ADD CONSTRAINT `FK_ff56834e735fa78a15d0cf21926` FOREIGN KEY (`categoryId`) REFERENCES `categories`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `products` ADD CONSTRAINT `FK_47942e65af8e4235d4045515f05` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `categories` ADD CONSTRAINT `FK_92d9e96e1be5a0b3e94fddb892a` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `company_metas` ADD CONSTRAINT `FK_fc84d5c271e0875e5dfcc9327c7` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `delivery_areas` ADD CONSTRAINT `FK_34df3bf6125b3ca45de2d4b2fb8` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `view_areas` ADD CONSTRAINT `FK_1eff24e640f0ee0f20e1a3a5c87` FOREIGN KEY (`companyId`) REFERENCES `companies`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `companies` ADD CONSTRAINT `FK_342cb27f23e38be60cce2035b10` FOREIGN KEY (`companyTypeId`) REFERENCES `company_types`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
        await queryRunner.query("ALTER TABLE `companies` ADD CONSTRAINT `FK_2bb6583d4cf35554e19694c8a9b` FOREIGN KEY (`addressId`) REFERENCES `addresses`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query("ALTER TABLE `companies` DROP FOREIGN KEY `FK_2bb6583d4cf35554e19694c8a9b`");
        await queryRunner.query("ALTER TABLE `companies` DROP FOREIGN KEY `FK_342cb27f23e38be60cce2035b10`");
        await queryRunner.query("ALTER TABLE `view_areas` DROP FOREIGN KEY `FK_1eff24e640f0ee0f20e1a3a5c87`");
        await queryRunner.query("ALTER TABLE `delivery_areas` DROP FOREIGN KEY `FK_34df3bf6125b3ca45de2d4b2fb8`");
        await queryRunner.query("ALTER TABLE `company_metas` DROP FOREIGN KEY `FK_fc84d5c271e0875e5dfcc9327c7`");
        await queryRunner.query("ALTER TABLE `categories` DROP FOREIGN KEY `FK_92d9e96e1be5a0b3e94fddb892a`");
        await queryRunner.query("ALTER TABLE `products` DROP FOREIGN KEY `FK_47942e65af8e4235d4045515f05`");
        await queryRunner.query("ALTER TABLE `products` DROP FOREIGN KEY `FK_ff56834e735fa78a15d0cf21926`");
        await queryRunner.query("ALTER TABLE `sales` DROP FOREIGN KEY `FK_58de77cc0543589490a33558b8e`");
        await queryRunner.query("ALTER TABLE `coupon_products` DROP FOREIGN KEY `FK_d37ece730758316fcc06d20ca3d`");
        await queryRunner.query("ALTER TABLE `coupon_products` DROP FOREIGN KEY `FK_32d7f809acaa65ddcaf7eb22f37`");
        await queryRunner.query("ALTER TABLE `coupon_users` DROP FOREIGN KEY `FK_a79deee063e7500c19cb23c0e95`");
        await queryRunner.query("ALTER TABLE `coupon_users` DROP FOREIGN KEY `FK_f0b0ea9f550e1fd439ca459ecb0`");
        await queryRunner.query("ALTER TABLE `user_metas` DROP FOREIGN KEY `FK_eccc6b4c4b311f38fd4e84d7290`");
        await queryRunner.query("ALTER TABLE `user_addresses` DROP FOREIGN KEY `FK_fa6da87159415a34ef76d14f729`");
        await queryRunner.query("ALTER TABLE `user_addresses` DROP FOREIGN KEY `FK_781afdedafe920f331f6229cb62`");
        await queryRunner.query("ALTER TABLE `favorite_products` DROP FOREIGN KEY `FK_aec1e29e9ebed0d27e185c4896e`");
        await queryRunner.query("ALTER TABLE `favorite_products` DROP FOREIGN KEY `FK_393984c0bf9c461d0171360f737`");
        await queryRunner.query("ALTER TABLE `credit_history` DROP FOREIGN KEY `FK_7c689c904a5dadd63126a5c948f`");
        await queryRunner.query("ALTER TABLE `orders` DROP FOREIGN KEY `FK_c26db6c65929ecfeab91073e80c`");
        await queryRunner.query("ALTER TABLE `orders` DROP FOREIGN KEY `FK_cbeaba1d3093f972e9b89fe5042`");
        await queryRunner.query("ALTER TABLE `orders` DROP FOREIGN KEY `FK_c137e0afcc291b9135d3e0c3d4e`");
        await queryRunner.query("ALTER TABLE `orders` DROP FOREIGN KEY `FK_b6fe899d5ca4a3f5925463990d1`");
        await queryRunner.query("ALTER TABLE `orders` DROP FOREIGN KEY `FK_151b79a83ba240b0cb31b2302d1`");
        await queryRunner.query("ALTER TABLE `ratings` DROP FOREIGN KEY `FK_4d0b0e3a4c4af854d225154ba40`");
        await queryRunner.query("ALTER TABLE `ratings` DROP FOREIGN KEY `FK_38bce3ebd84aa545a418c6b6e9c`");
        await queryRunner.query("ALTER TABLE `ratings` DROP FOREIGN KEY `FK_026a9f41a80ac181cd8ead10b13`");
        await queryRunner.query("ALTER TABLE `company_payment_methods` DROP FOREIGN KEY `FK_50140b197f6a47698d463b4b3aa`");
        await queryRunner.query("ALTER TABLE `company_payment_methods` DROP FOREIGN KEY `FK_d167c7a5fa7e321ac698cbbc67d`");
        await queryRunner.query("ALTER TABLE `order_products` DROP FOREIGN KEY `FK_24388ec1004228b4745d21d547b`");
        await queryRunner.query("ALTER TABLE `order_products` DROP FOREIGN KEY `FK_28b66449cf7cd76444378ad4e92`");
        await queryRunner.query("ALTER TABLE `order_products` DROP FOREIGN KEY `FK_27ca18f2453639a1cafb7404ece`");
        await queryRunner.query("ALTER TABLE `order_option_groups` DROP FOREIGN KEY `FK_1a6cfcb48db2eefddd246586b55`");
        await queryRunner.query("ALTER TABLE `order_option_groups` DROP FOREIGN KEY `FK_2d35f9d488137f53f6c0c76a9b1`");
        await queryRunner.query("ALTER TABLE `options_groups` DROP FOREIGN KEY `FK_3aecc6d707a2e8787b82bbc707e`");
        await queryRunner.query("ALTER TABLE `options_groups` DROP FOREIGN KEY `FK_bf72d679755159292984b730288`");
        await queryRunner.query("ALTER TABLE `options` DROP FOREIGN KEY `FK_693536a026dac7ded111a40d52b`");
        await queryRunner.query("ALTER TABLE `order_options` DROP FOREIGN KEY `FK_ae3e162e5d4a7bbef8270924d66`");
        await queryRunner.query("ALTER TABLE `order_options` DROP FOREIGN KEY `FK_f87d8aaf729cd701be0630ab9d7`");
        await queryRunner.query("ALTER TABLE `deliveries` DROP FOREIGN KEY `FK_c6135e6bed9c4309abfcdaf9569`");
        await queryRunner.query("ALTER TABLE `deliveries` DROP FOREIGN KEY `FK_f7433e3639e213f901e22cf8640`");
        await queryRunner.query("ALTER TABLE `credit_balances` DROP FOREIGN KEY `FK_7f8103cfe175c66f1e5e8acfe23`");
        await queryRunner.query("ALTER TABLE `company_users` DROP FOREIGN KEY `FK_380c62ffe8112dadf9b5709beee`");
        await queryRunner.query("ALTER TABLE `company_users` DROP FOREIGN KEY `FK_9313a9760bacf83c51e9232c3c3`");
        await queryRunner.query("ALTER TABLE `company_users` DROP FOREIGN KEY `FK_f48efdd06dd9b999ae40c3c96a6`");
        await queryRunner.query("ALTER TABLE `coupon_companies` DROP FOREIGN KEY `FK_896186ddfb5aa38f3606492d3a8`");
        await queryRunner.query("ALTER TABLE `coupon_companies` DROP FOREIGN KEY `FK_4b6a4884f5c7291d652bf955398`");
        await queryRunner.query("DROP TABLE `config`");
        await queryRunner.query("DROP TABLE `addresses`");
        await queryRunner.query("DROP INDEX `companyTypeId` ON `companies`");
        await queryRunner.query("DROP INDEX `addressId` ON `companies`");
        await queryRunner.query("DROP TABLE `companies`");
        await queryRunner.query("DROP INDEX `companyId` ON `view_areas`");
        await queryRunner.query("DROP TABLE `view_areas`");
        await queryRunner.query("DROP INDEX `companyId` ON `delivery_areas`");
        await queryRunner.query("DROP TABLE `delivery_areas`");
        await queryRunner.query("DROP INDEX `companyId` ON `company_metas`");
        await queryRunner.query("DROP TABLE `company_metas`");
        await queryRunner.query("DROP TABLE `company_types`");
        await queryRunner.query("DROP INDEX `companyId` ON `categories`");
        await queryRunner.query("DROP TABLE `categories`");
        await queryRunner.query("DROP INDEX `categoryId` ON `products`");
        await queryRunner.query("DROP INDEX `companyId` ON `products`");
        await queryRunner.query("DROP TABLE `products`");
        await queryRunner.query("DROP INDEX `productId` ON `sales`");
        await queryRunner.query("DROP TABLE `sales`");
        await queryRunner.query("DROP INDEX `productId` ON `coupon_products`");
        await queryRunner.query("DROP TABLE `coupon_products`");
        await queryRunner.query("DROP TABLE `coupons`");
        await queryRunner.query("DROP INDEX `userId` ON `coupon_users`");
        await queryRunner.query("DROP TABLE `coupon_users`");
        await queryRunner.query("DROP INDEX `IDX_97672ac88f789774dd47f7c8be` ON `users`");
        await queryRunner.query("DROP INDEX `email` ON `users`");
        await queryRunner.query("DROP TABLE `users`");
        await queryRunner.query("DROP INDEX `userId` ON `user_metas`");
        await queryRunner.query("DROP TABLE `user_metas`");
        await queryRunner.query("DROP INDEX `addressId` ON `user_addresses`");
        await queryRunner.query("DROP TABLE `user_addresses`");
        await queryRunner.query("DROP INDEX `productId` ON `favorite_products`");
        await queryRunner.query("DROP TABLE `favorite_products`");
        await queryRunner.query("DROP INDEX `userId` ON `credit_history`");
        await queryRunner.query("DROP TABLE `credit_history`");
        await queryRunner.query("DROP INDEX `userId` ON `orders`");
        await queryRunner.query("DROP INDEX `companyId` ON `orders`");
        await queryRunner.query("DROP INDEX `paymentMethodId` ON `orders`");
        await queryRunner.query("DROP INDEX `creditHistoryId` ON `orders`");
        await queryRunner.query("DROP INDEX `orders_couponId_foreign_idx` ON `orders`");
        await queryRunner.query("DROP TABLE `orders`");
        await queryRunner.query("DROP INDEX `companyId` ON `ratings`");
        await queryRunner.query("DROP INDEX `orderId` ON `ratings`");
        await queryRunner.query("DROP INDEX `userId` ON `ratings`");
        await queryRunner.query("DROP TABLE `ratings`");
        await queryRunner.query("DROP TABLE `payment_methods`");
        await queryRunner.query("DROP INDEX `company_payment_methods_paymentMethodId_companyId_unique` ON `company_payment_methods`");
        await queryRunner.query("DROP INDEX `paymentMethodId` ON `company_payment_methods`");
        await queryRunner.query("DROP TABLE `company_payment_methods`");
        await queryRunner.query("DROP INDEX `productId` ON `order_products`");
        await queryRunner.query("DROP INDEX `orderId` ON `order_products`");
        await queryRunner.query("DROP INDEX `productRelatedId` ON `order_products`");
        await queryRunner.query("DROP TABLE `order_products`");
        await queryRunner.query("DROP INDEX `orderProductId` ON `order_option_groups`");
        await queryRunner.query("DROP INDEX `optionsGroupRelatedId` ON `order_option_groups`");
        await queryRunner.query("DROP TABLE `order_option_groups`");
        await queryRunner.query("DROP INDEX `productId` ON `options_groups`");
        await queryRunner.query("DROP INDEX `maxSelectRestrain` ON `options_groups`");
        await queryRunner.query("DROP TABLE `options_groups`");
        await queryRunner.query("DROP INDEX `optionsGroupId` ON `options`");
        await queryRunner.query("DROP TABLE `options`");
        await queryRunner.query("DROP INDEX `orderOptionsGroupId` ON `order_options`");
        await queryRunner.query("DROP INDEX `optionRelatedId` ON `order_options`");
        await queryRunner.query("DROP TABLE `order_options`");
        await queryRunner.query("DROP INDEX `orderId` ON `deliveries`");
        await queryRunner.query("DROP INDEX `deliveryManId` ON `deliveries`");
        await queryRunner.query("DROP TABLE `deliveries`");
        await queryRunner.query("DROP INDEX `userId` ON `credit_balances`");
        await queryRunner.query("DROP TABLE `credit_balances`");
        await queryRunner.query("DROP INDEX `company_users_userId_companyId_unique` ON `company_users`");
        await queryRunner.query("DROP INDEX `userId` ON `company_users`");
        await queryRunner.query("DROP INDEX `roleId` ON `company_users`");
        await queryRunner.query("DROP TABLE `company_users`");
        await queryRunner.query("DROP TABLE `roles`");
        await queryRunner.query("DROP INDEX `companyId` ON `coupon_companies`");
        await queryRunner.query("DROP TABLE `coupon_companies`");
    }

}
